/* automatically generated by rust-bindgen 0.70.1 */

pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub type err_t = bool;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TMap {
    _unused: [u8; 0],
}
pub type TMap_ptr = *mut TMap;
extern "C" {
    pub fn TMap_new() -> TMap_ptr;
}
extern "C" {
    pub fn TMap_insert(
        map: TMap_ptr,
        key: *const ::std::os::raw::c_char,
        value: *mut ::std::os::raw::c_void,
        deleteValue: ::std::option::Option<
            unsafe extern "C" fn(value: *mut ::std::os::raw::c_void),
        >,
    ) -> err_t;
}
extern "C" {
    pub fn TMap_search(
        map: TMap_ptr,
        key: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn TMap_has(map: TMap_ptr, key: *const ::std::os::raw::c_char) -> bool;
}
extern "C" {
    pub fn TMap_delete(self_: TMap_ptr);
}
